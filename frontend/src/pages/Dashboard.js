import React from "react";
import Sidebar from "../components/Sidebar"; // Import the Sidebar component
import TopBar from "../components/TopBar";
import { useState, useEffect } from "react";
import {
  getPinnedRepos,
  getRepoDocumentCount,
  getRecentFilesAcrossRepos,
  unpinRepo,
} from "../services/repo"; // Import the service
import { getCurrentUser } from "../services/user"; // Import the function

const Dashboard = () => {
  const [pinnedRepos, setPinnedRepos] = useState([]);
  const [recentFiles, setRecentFiles] = useState([]);

  // Function to determine the file type category based on extension
  const getFileIcon = (fileExtension) => {
    const imageExtensions = ["jpg", "jpeg", "png", "gif", "bmp"];
    const codeExtensions = ["js", "py", "html", "css", "cpp", "java"];
    const powerpointExtensions = ["pptx", "ppt"];
    const wordtExtensions = ["docx", "doc"];
    const excelExtensions = ["xlsx", "xls"];
    const compressedExtensions = ["zip", "rar", "7z"];

    if (excelExtensions.includes(fileExtension)) return fileTypeIcons.excel;
    if (wordtExtensions.includes(fileExtension)) return fileTypeIcons.word;
    if (powerpointExtensions.includes(fileExtension))
      return fileTypeIcons.powerpoint;
    if (imageExtensions.includes(fileExtension)) return fileTypeIcons.image;
    if (codeExtensions.includes(fileExtension)) return fileTypeIcons.code;
    if (fileExtension === "pdf") return fileTypeIcons.pdf;
    if (compressedExtensions.includes(fileExtension))
      return fileTypeIcons.compressed;

    return fileTypeIcons.default; // Fallback for unhandled extensions
  };

  // Define SVGs for different file types
  const fileTypeIcons = {
    pdf: (
      <svg
        width="45"
        height="70"
        viewBox="0 0 60 75"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_144_840)">
          <path
            d="M28.4219 37.5146C27.6406 35.1709 27.6562 30.6445 28.1094 30.6445C29.4219 30.6445 29.2969 36.0498 28.4219 37.5146ZM28.1562 44.4287C26.9531 47.3877 25.4531 50.7715 23.7188 53.6133C26.5781 52.5879 29.8125 51.0938 33.5469 50.4053C31.5625 48.999 29.6562 46.9775 28.1562 44.4287ZM13.4531 62.71C13.4531 62.8271 15.5156 61.9189 18.9062 56.8213C17.8594 57.7441 14.3594 60.4102 13.4531 62.71ZM38.75 23.4375H60V71.4844C60 73.4326 58.3281 75 56.25 75H3.75C1.67188 75 0 73.4326 0 71.4844V3.51562C0 1.56738 1.67188 0 3.75 0H35V19.9219C35 21.8555 36.6875 23.4375 38.75 23.4375ZM37.5 48.6035C34.375 46.8164 32.2969 44.3555 30.8281 40.7227C31.5312 38.0127 32.6406 33.8965 31.7969 31.3184C31.0625 27.0117 25.1719 27.4365 24.3281 30.3223C23.5469 33.0029 24.2656 36.7822 25.5938 41.6016C23.7812 45.6445 21.1094 51.0645 19.2188 54.1699C19.2031 54.1699 19.2031 54.1846 19.1875 54.1846C14.9531 56.2207 7.6875 60.7031 10.6719 64.1455C11.5469 65.1562 13.1719 65.6104 14.0312 65.6104C16.8281 65.6104 19.6094 62.9736 23.5781 56.5576C27.6094 55.3125 32.0312 53.7598 35.9219 53.1592C39.3125 54.8877 43.2812 56.0156 45.9219 56.0156C50.4844 56.0156 50.7969 51.3281 49 49.6582C46.8281 47.666 40.5156 48.2373 37.5 48.6035ZM58.9062 15.3809L43.5938 1.02539C42.8906 0.366211 41.9375 0 40.9375 0H40V18.75H60V17.8564C60 16.9336 59.6094 16.04 58.9062 15.3809ZM47.3281 52.7783C47.9688 52.3828 46.9375 51.0352 40.6406 51.46C46.4375 53.7744 47.3281 52.7783 47.3281 52.7783Z"
            fill="#4E3E63"
          />
        </g>
        <defs>
          <clipPath id="clip0_144_840">
            <rect width="60" height="75" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
    word: (
      <svg
        width="70"
        height="70"
        viewBox="0 0 86 85"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M77.016 7.96874H26.279C25.863 7.96769 25.4509 8.04876 25.0663 8.20731C24.6817 8.36586 24.3322 8.59876 24.0378 8.89267C23.7434 9.18658 23.5099 9.5357 23.3507 9.92003C23.1915 10.3044 23.1098 10.7163 23.1101 11.1323V25.2344L52.5121 33.8672L80.1876 25.2344V11.1323C80.188 10.7161 80.1061 10.3039 79.9467 9.91942C79.7874 9.53491 79.5537 9.18567 79.259 8.89173C78.9643 8.59779 78.6145 8.36494 78.2296 8.20655C77.8447 8.04815 77.4323 7.96734 77.016 7.96874Z"
          fill="#41A5EE"
        />
        <path
          d="M80.1876 25.2344H23.1101V42.5L52.5121 47.6797L80.1876 42.5V25.2344Z"
          fill="#2B7CD3"
        />
        <path
          d="M23.1101 42.5V59.7656L50.7829 63.2187L80.1876 59.7656V42.5H23.1101Z"
          fill="#185ABD"
        />
        <path
          d="M26.279 77.0312H77.0134C77.4298 77.033 77.8425 76.9524 78.2277 76.7942C78.6129 76.636 78.9631 76.4032 79.258 76.1092C79.553 75.8152 79.787 75.4659 79.9465 75.0812C80.106 74.6965 80.188 74.2841 80.1876 73.8677V59.7656H23.1101V73.8677C23.1098 74.2837 23.1915 74.6956 23.3507 75.08C23.5099 75.4643 23.7434 75.8134 24.0378 76.1073C24.3322 76.4012 24.6817 76.6341 25.0663 76.7927C25.4509 76.9512 25.863 77.0323 26.279 77.0312Z"
          fill="#103F91"
        />
        <path
          opacity="0.1"
          d="M44.1529 21.7812H23.1101V64.9453H44.1529C44.9914 64.9411 45.7945 64.6068 46.3881 64.0146C46.9818 63.4224 47.3182 62.6202 47.3245 61.7817V24.9448C47.3182 24.1064 46.9818 23.3041 46.3881 22.712C45.7945 22.1198 44.9914 21.7854 44.1529 21.7812Z"
          fill="black"
        />
        <path
          opacity="0.2"
          d="M42.4237 23.5078H23.1101V66.6719H42.4237C43.2622 66.6677 44.0653 66.3333 44.6589 65.7411C45.2526 65.149 45.589 64.3468 45.5953 63.5083V26.6714C45.589 25.8329 45.2526 25.0307 44.6589 24.4385C44.0653 23.8464 43.2622 23.512 42.4237 23.5078Z"
          fill="black"
        />
        <path
          opacity="0.2"
          d="M42.4237 23.5078H23.1101V63.2187H42.4237C43.2622 63.2146 44.0653 62.8802 44.6589 62.288C45.2526 61.6959 45.589 60.8936 45.5953 60.0552V26.6714C45.589 25.8329 45.2526 25.0307 44.6589 24.4385C44.0653 23.8464 43.2622 23.512 42.4237 23.5078Z"
          fill="black"
        />
        <path
          opacity="0.2"
          d="M40.6945 23.5078H23.1101V63.2187H40.6945C41.533 63.2146 42.336 62.8802 42.9297 62.288C43.5234 61.6959 43.8598 60.8936 43.866 60.0552V26.6714C43.8598 25.8329 43.5234 25.0307 42.9297 24.4385C42.336 23.8464 41.533 23.512 40.6945 23.5078Z"
          fill="black"
        />
        <path
          d="M8.98406 23.5078H40.6944C41.5344 23.5071 42.3403 23.8399 42.935 24.4332C43.5297 25.0264 43.8645 25.8314 43.8659 26.6714V58.3286C43.8645 59.1686 43.5297 59.9737 42.935 60.5669C42.3403 61.1601 41.5344 61.4929 40.6944 61.4922H8.98406C8.56785 61.4936 8.15545 61.4128 7.77055 61.2544C7.38564 61.096 7.03581 60.8632 6.74113 60.5692C6.44645 60.2753 6.21272 59.926 6.05336 59.5415C5.894 59.157 5.81215 58.7448 5.8125 58.3286V26.6714C5.81215 26.2552 5.894 25.843 6.05336 25.4585C6.21272 25.074 6.44645 24.7248 6.74113 24.4308C7.03581 24.1369 7.38564 23.904 7.77055 23.7456C8.15545 23.5872 8.56785 23.5064 8.98406 23.5078Z"
          fill="url(#paint0_linear_144_819)"
        />
        <path
          d="M18.8281 47.7806C18.8901 48.2694 18.9308 48.6953 18.9503 49.0583H19.0246C19.0512 48.713 19.1088 48.2968 19.1973 47.8099C19.3301 47.0794 19.362 46.912 19.4337 46.5747L22.7673 32.2123H27.081L30.5342 46.3595C30.7336 47.235 30.8773 48.1222 30.9645 49.0158H31.0229C31.0892 48.146 31.2089 47.281 31.3815 46.4259L34.1414 32.1938H38.0646L33.2196 52.7744H28.6323L25.3465 39.1584C25.2509 38.7653 25.1429 38.2535 25.0225 37.6231C24.902 36.9927 24.8277 36.5323 24.7993 36.2419H24.7435C24.7064 36.5766 24.632 37.0733 24.5204 37.732C24.4089 38.3908 24.3203 38.8795 24.2548 39.1983L21.1656 52.7824H16.5012L11.6296 32.2123H15.614L18.6182 46.6039C18.7058 46.9928 18.7758 47.3854 18.8281 47.7806Z"
          fill="white"
        />
        <defs>
          <linearGradient
            id="paint0_linear_144_819"
            x1="12.4372"
            y1="21.0216"
            x2="37.2412"
            y2="63.9785"
            gradientUnits="userSpaceOnUse"
          >
            <stop stop-color="#2368C4" />
            <stop offset="0.5" stop-color="#1A5DBE" />
            <stop offset="1" stop-color="#1146AC" />
          </linearGradient>
        </defs>
      </svg>
    ),

    image: (
      <svg
        width="70"
        height="70"
        viewBox="0 0 85 85"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M21.25 0H63.75C66.5679 0 69.2704 1.11942 71.263 3.11199C73.2556 5.10456 74.375 7.80707 74.375 10.625V54.6816L59.8719 40.1784C59.3259 39.634 58.668 39.2149 57.9438 38.9502C57.2196 38.6856 56.4465 38.5818 55.6781 38.646C54.9098 38.7102 54.1646 38.9409 53.4944 39.322C52.8241 39.7032 52.2449 40.2256 51.7969 40.8531L41.7616 54.8994L32.3638 49.2575C31.3478 48.6472 30.157 48.394 28.9806 48.5384C27.8043 48.6828 26.71 49.2164 25.8719 50.0544L10.625 65.3012V10.625C10.625 7.80707 11.7444 5.10456 13.737 3.11199C15.7296 1.11942 18.4321 0 21.25 0ZM42.5106 29.2188C42.5106 28.1723 42.3045 27.1361 41.904 26.1692C41.5036 25.2024 40.9166 24.324 40.1766 23.584C39.4367 22.844 38.5582 22.2571 37.5914 21.8566C36.6246 21.4561 35.5883 21.25 34.5419 21.25C33.4954 21.25 32.4592 21.4561 31.4924 21.8566C30.5256 22.2571 29.6471 22.844 28.9071 23.584C28.1672 24.324 27.5802 25.2024 27.1797 26.1692C26.7792 27.1361 26.5731 28.1723 26.5731 29.2188C26.5731 31.3322 27.4127 33.3591 28.9071 34.8535C30.4015 36.3479 32.4284 37.1875 34.5419 37.1875C36.6553 37.1875 38.6822 36.3479 40.1766 34.8535C41.6711 33.3591 42.5106 31.3322 42.5106 29.2188Z"
          fill="#6D4FAD"
        />
        <path
          d="M56.1213 43.9344L74.375 62.1987V74.375C74.375 77.1929 73.2556 79.8954 71.263 81.888C69.2704 83.8806 66.5679 85 63.75 85H21.25C18.4321 85 15.7296 83.8806 13.737 81.888C11.7444 79.8954 10.625 77.1929 10.625 74.375V72.8184L29.6331 53.8156L43.2331 61.9756L56.1213 43.9344Z"
          fill="#6D4FAD"
        />
      </svg>
    ),

    powerpoint: (
      <svg
        width="65"
        height="65"
        viewBox="0 0 90 91"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M52.1325 7.47009V15.5223C61.695 15.5757 72.8241 15.4238 82.3781 15.5673C84.1838 15.5673 84.2625 17.1648 84.285 18.5598C84.4369 35.2717 84.2484 52.4645 84.375 69.1848C84.3412 69.8429 84.3581 72.2785 84.3384 72.9704C84.2766 75.2851 83.1178 75.3863 80.8031 75.4567C80.4319 75.4567 79.3406 75.4735 78.9806 75.4904C70.0341 75.4454 61.0875 75.4651 52.1325 75.4651V84.4145L5.625 77.2567V14.6476L52.1325 7.47009Z"
          fill="#D33922"
        />
        <path
          d="M52.1325 18.2054H81.6637V72.7679H52.1325V65.6298H73.6031V62.0438H52.1325V57.572H73.6031V53.9945H52.1409C52.1446 52.2395 52.139 50.4863 52.124 48.7351C53.8808 49.3682 55.7565 49.6021 57.6149 49.4196C59.4733 49.2372 61.2677 48.6431 62.8678 47.6804C64.4988 46.6092 65.8499 45.1634 66.8084 43.4637C67.7668 41.764 68.3048 39.8597 68.3775 37.9098C64.44 37.8816 60.5221 37.8929 56.6043 37.8929C56.6043 34.0004 56.6493 30.1107 56.5228 26.2266C55.0546 26.5079 53.5893 26.8173 52.1296 27.1295V18.2082"
          fill="white"
        />
        <path
          d="M58.4039 24.3535C61.4547 24.5447 64.3317 25.8393 66.498 27.9958C68.6643 30.1523 69.972 33.0234 70.1771 36.0732C66.2396 36.1182 62.3218 36.1013 58.3955 36.1013V24.3535"
          fill="#D33922"
        />
        <path
          d="M19.9689 31.1092C24.826 31.3426 30.7126 29.1854 34.7401 32.8276C38.596 37.5076 37.5751 46.1138 31.8601 48.9123C29.7821 49.7351 27.5294 50.0177 25.3126 49.7335C25.3126 53.2323 25.2957 56.731 25.3126 60.227C23.537 60.0732 21.7623 59.9242 19.9885 59.7798C19.907 50.2173 19.8901 40.6548 19.9885 31.0923"
          fill="white"
        />
        <path
          d="M25.2933 35.9466C27.0567 35.8651 29.2308 35.5445 30.4289 37.1982C30.9097 38.0982 31.1708 39.0991 31.1908 40.1192C31.2108 41.1393 30.9893 42.1498 30.5442 43.0679C29.5233 44.9101 27.217 44.7329 25.4367 44.9466C25.2483 41.9485 25.268 38.9532 25.2933 35.9466Z"
          fill="#D33922"
        />
      </svg>
    ),

    code: (
      <svg
        width="65"
        height="65"
        viewBox="0 0 86 85"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fill-rule="evenodd"
          clip-rule="evenodd"
          d="M12.7684 12.2683C7.58337 17.4604 7.58337 25.8046 7.58337 42.5C7.58337 59.1954 7.58337 67.5431 12.7684 72.7281C17.9605 77.9167 26.3046 77.9167 43 77.9167C59.6955 77.9167 68.0432 77.9167 73.2282 72.7281C78.4167 67.5467 78.4167 59.1954 78.4167 42.5C78.4167 25.8046 78.4167 17.4569 73.2282 12.2683C68.0467 7.08334 59.6955 7.08334 43 7.08334C26.3046 7.08334 17.9569 7.08334 12.7684 12.2683ZM23.2517 33.7167C23.7027 33.1758 24.35 32.8362 25.0513 32.7724C25.7526 32.7087 26.4506 32.926 26.9917 33.3767L27.9727 34.1913C30.1155 35.9763 31.9394 37.4956 33.2002 38.8946C34.5425 40.3821 35.5873 42.0856 35.5873 44.2708C35.5873 46.4561 34.5425 48.1631 33.2002 49.6471C31.9394 51.0461 30.1155 52.5654 27.9727 54.3504L26.9917 55.165C26.7251 55.3982 26.4146 55.5758 26.0784 55.6872C25.7422 55.7986 25.3871 55.8417 25.034 55.8139C24.6809 55.786 24.337 55.6879 24.0224 55.5251C23.7078 55.3624 23.4289 55.1384 23.2021 54.8663C22.9754 54.5942 22.8054 54.2795 22.702 53.9407C22.5987 53.602 22.5642 53.2459 22.6005 52.8936C22.6368 52.5413 22.7432 52.1998 22.9134 51.8892C23.0836 51.5786 23.3142 51.3052 23.5917 51.085L24.4205 50.3944C26.7544 48.4465 28.2809 47.1715 29.2584 46.0877C30.1863 45.0606 30.2748 44.5754 30.2748 44.2708C30.2748 43.9663 30.1863 43.4846 29.2584 42.454C28.2773 41.3702 26.7544 40.0917 24.4205 38.1473L23.5917 37.4567C23.0508 37.0057 22.7112 36.3584 22.6474 35.6571C22.5837 34.9557 22.801 34.2578 23.2517 33.7167ZM63.3646 53.125C63.3646 53.8295 63.0848 54.5051 62.5866 55.0033C62.0885 55.5014 61.4129 55.7813 60.7084 55.7813H43C42.2956 55.7813 41.6199 55.5014 41.1218 55.0033C40.6236 54.5051 40.3438 53.8295 40.3438 53.125C40.3438 52.4205 40.6236 51.7449 41.1218 51.2468C41.6199 50.7486 42.2956 50.4688 43 50.4688H60.7084C61.4129 50.4688 62.0885 50.7486 62.5866 51.2468C63.0848 51.7449 63.3646 52.4205 63.3646 53.125Z"
          fill="#FF5E43"
        />
      </svg>
    ),

    excel: (
      <svg
        width="70"
        height="70"
        viewBox="0 0 86 85"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M52.5121 40.7734L23.1101 35.5938V73.8677C23.1098 74.2837 23.1915 74.6956 23.3507 75.08C23.5099 75.4643 23.7434 75.8134 24.0378 76.1073C24.3322 76.4012 24.6817 76.6341 25.0663 76.7927C25.4509 76.9512 25.863 77.0323 26.279 77.0312H77.0134C77.4298 77.033 77.8425 76.9524 78.2277 76.7942C78.6129 76.636 78.9631 76.4032 79.258 76.1092C79.553 75.8152 79.787 75.4659 79.9465 75.0812C80.106 74.6965 80.188 74.2841 80.1876 73.8677V59.7656L52.5121 40.7734Z"
          fill="#185C37"
        />
        <path
          d="M52.5121 7.96876H26.279C25.863 7.96771 25.4509 8.04879 25.0663 8.20733C24.6817 8.36588 24.3322 8.59879 24.0378 8.89269C23.7434 9.1866 23.5099 9.53573 23.3507 9.92006C23.1915 10.3044 23.1098 10.7164 23.1101 11.1324V25.2344L52.5121 42.5L68.0804 47.6797L80.1876 42.5V25.2344L52.5121 7.96876Z"
          fill="#21A366"
        />
        <path
          d="M23.1101 25.2344H52.5121V42.5H23.1101V25.2344Z"
          fill="#107C41"
        />
        <path
          opacity="0.1"
          d="M44.1529 21.7812H23.1101V64.9453H44.1529C44.9914 64.9411 45.7945 64.6068 46.3881 64.0146C46.9818 63.4224 47.3182 62.6202 47.3245 61.7817V24.9448C47.3182 24.1064 46.9818 23.3041 46.3881 22.712C45.7945 22.1198 44.9914 21.7854 44.1529 21.7812Z"
          fill="black"
        />
        <path
          opacity="0.2"
          d="M42.4237 23.5078H23.1101V66.6719H42.4237C43.2622 66.6677 44.0653 66.3333 44.6589 65.7411C45.2526 65.149 45.589 64.3468 45.5953 63.5083V26.6714C45.589 25.8329 45.2526 25.0307 44.6589 24.4385C44.0653 23.8464 43.2622 23.512 42.4237 23.5078Z"
          fill="black"
        />
        <path
          opacity="0.2"
          d="M42.4237 23.5078H23.1101V63.2187H42.4237C43.2622 63.2146 44.0653 62.8802 44.6589 62.288C45.2526 61.6959 45.589 60.8936 45.5953 60.0552V26.6714C45.589 25.8329 45.2526 25.0307 44.6589 24.4385C44.0653 23.8464 43.2622 23.512 42.4237 23.5078Z"
          fill="black"
        />
        <path
          opacity="0.2"
          d="M40.6945 23.5078H23.1101V63.2187H40.6945C41.533 63.2146 42.336 62.8802 42.9297 62.288C43.5234 61.6959 43.8598 60.8936 43.866 60.0552V26.6714C43.8598 25.8329 43.5234 25.0307 42.9297 24.4385C42.336 23.8464 41.533 23.512 40.6945 23.5078Z"
          fill="black"
        />
        <path
          d="M8.98406 23.5078H40.6944C41.5344 23.5071 42.3403 23.8399 42.935 24.4332C43.5297 25.0264 43.8645 25.8314 43.8659 26.6714V58.3286C43.8645 59.1686 43.5297 59.9737 42.935 60.5669C42.3403 61.1601 41.5344 61.4929 40.6944 61.4922H8.98406C8.56785 61.4936 8.15545 61.4128 7.77055 61.2544C7.38564 61.096 7.03581 60.8632 6.74113 60.5692C6.44645 60.2753 6.21272 59.926 6.05336 59.5415C5.894 59.157 5.81215 58.7448 5.8125 58.3286V26.6714C5.81215 26.2552 5.894 25.843 6.05336 25.4585C6.21272 25.074 6.44645 24.7248 6.74113 24.4308C7.03581 24.1369 7.38564 23.904 7.77055 23.7456C8.15545 23.5872 8.56785 23.5064 8.98406 23.5078Z"
          fill="url(#paint0_linear_144_800)"
        />
        <path
          d="M15.6406 52.7877L22.3105 42.4708L16.2011 32.2123H21.1072L24.4408 38.7812C24.7489 39.4028 24.972 39.865 25.073 40.1731H25.1181C25.3359 39.6755 25.5661 39.1921 25.8087 38.7228L29.3734 32.223H33.8891L27.623 42.423L34.0484 52.7956H29.2433L25.3917 45.5945C25.2134 45.2847 25.0615 44.9603 24.9375 44.625H24.8737C24.7612 44.9518 24.6114 45.2647 24.4275 45.5573L20.4617 52.7877H15.6406Z"
          fill="white"
        />
        <path
          d="M77.0159 7.96874H52.512V25.2344H80.1874V11.1323C80.1878 10.7161 80.1059 10.3039 79.9466 9.91942C79.7872 9.53491 79.5535 9.18567 79.2588 8.89173C78.9641 8.59779 78.6143 8.36494 78.2294 8.20655C77.8445 8.04815 77.4321 7.96734 77.0159 7.96874Z"
          fill="#33C481"
        />
        <path d="M52.512 42.5H80.1874V59.7656H52.512V42.5Z" fill="#107C41" />
        <defs>
          <linearGradient
            id="paint0_linear_144_800"
            x1="12.4372"
            y1="21.0216"
            x2="37.2412"
            y2="63.9785"
            gradientUnits="userSpaceOnUse"
          >
            <stop stop-color="#18884F" />
            <stop offset="0.5" stop-color="#117E43" />
            <stop offset="1" stop-color="#0B6631" />
          </linearGradient>
        </defs>
      </svg>
    ),
    compressed: (
      <svg
        width="70"
        height="70"
        viewBox="0 0 85 85"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M70.8332 21.25H42.4999L35.4166 14.1667H14.1666C10.2708 14.1667 7.08325 17.3542 7.08325 21.25V63.75C7.08325 67.6458 10.2708 70.8333 14.1666 70.8333H70.8332C74.7291 70.8333 77.9166 67.6458 77.9166 63.75V28.3333C77.9166 24.4375 74.7291 21.25 70.8332 21.25ZM63.7499 42.5H56.6666V49.5833H63.7499V56.6667H56.6666V63.75H49.5833V56.6667H56.6666V49.5833H49.5833V42.5H56.6666V35.4167H49.5833V28.3333H56.6666V35.4167H63.7499V42.5Z"
          fill="#FFBD21"
        />
      </svg>
    ),

    // Add more icons for other extensions...
  };

  useEffect(() => {
    // Fetch the recent files across all repos when the component mounts
    const fetchRecentFiles = async () => {
      try {
        const files = await getRecentFilesAcrossRepos();
        setRecentFiles(files);
      } catch (error) {
        console.error("Error fetching recent files:", error);
      }
    };

    fetchRecentFiles();
  }, []);

  // Define the color and SVG options
  const colors = ["bg-light-purple", "bg-light-orange", "bg-light-blue"];
  const svgs = [
    {
      path: "M55.9943 8.24821C53.4001 8.24821 51.0977 6.58631 50.2807 4.1241C49.4637 1.6619 47.1613 0 44.5671 0L10 0C4.47717 0 0 4.47715 0 10L0 54C0 59.5228 4.47715 64 10 64L70 64C75.5228 64 80 59.5228 80 54L80 18.2482C80 12.7254 75.5228 8.24821 70 8.24821L55.9943 8.24821Z",
      color: "#6D4FAD",
    }, // SVG 1
    {
      path: "M55.9943 8.24821C53.4001 8.24821 51.0977 6.58631 50.2807 4.1241C49.4637 1.6619 47.1613 0 44.5671 0L10 0C4.47717 0 0 4.47715 0 10L0 54C0 59.5228 4.47715 64 10 64L70 64C75.5228 64 80 59.5228 80 54L80 18.2482C80 12.7254 75.5228 8.24821 70 8.24821L55.9943 8.24821Z",
      color: "#FF5E43",
    }, // SVG 2
    {
      path: "M55.9943 8.24821C53.4001 8.24821 51.0977 6.58631 50.2807 4.1241C49.4637 1.6619 47.1613 0 44.5671 0L10 0C4.47717 0 0 4.47715 0 10L0 54C0 59.5228 4.47715 64 10 64L70 64C75.5228 64 80 59.5228 80 54L80 18.2482C80 12.7254 75.5228 8.24821 70 8.24821L55.9943 8.24821Z",
      color: "#436FC6",
    }, // SVG 3
  ];

  // Fetch pinned repositories and their document count when the component mounts
  useEffect(() => {
    const fetchPinnedReposWithDocs = async () => {
      try {
        const repos = await getPinnedRepos();
        const reposWithDocs = await Promise.all(
          repos.map(async (repo) => {
            const documentCount = await getRepoDocumentCount(repo.id);
            console.log(repo.documentCount);

            return { ...repo, documentCount };
          })
        );
        setPinnedRepos(reposWithDocs);
      } catch (error) {
        console.error(
          "Error fetching pinned repos with document count:",
          error
        );
      }
    };

    fetchPinnedReposWithDocs();
  }, []);

  const handleUnpinRepo = async (repoId) => {
    try {
      await unpinRepo(repoId);
      const updatedRepos = pinnedRepos.filter((repo) => repo.id !== repoId);
      setPinnedRepos(updatedRepos);
    } catch (error) {
      console.error("Error unpinning repository:", error);
    }
  };

  const handleRepoClick = (repoId) => {
    // Navigate to the repository details page or perform any other action
    console.log(`Clicked on repo with ID: ${repoId}`);
    // For example, you might want to redirect:
    // history.push(`/repos/${repoId}`);
  };
  const [user, setUser] = useState(null);
  const [token, setToken] = useState();

  useEffect(() => {
    const fetchUser = async () => {
      try {
        const userData = await getCurrentUser();
        setUser(userData);
        setToken(userData.token); // Assuming userData contains the token
      } catch (error) {
        console.error("Error fetching user data:", error);
      }
    };

    fetchUser();
  }, []);

  return (
    <div className="flex">
      <Sidebar /> {/* Sidebar on the left */}
      <div className="flex-grow p-8 ml-32">

        <TopBar /> {/* Top bar for date and profile */}
        {/* Welcome Section */}
        <div className="bg-white h-48  rounded-tl-xl rounded-br-xl pl-8 pr-8 pt-4 pb-4 shadow-lg flex justify-between items-center mt-5">
          <div>
            {user && (
              <h1 className="text-4xl font-bold text-[#000]">
                Welcome Back,{" "}
                <span className="text-main-color">{user.firstname}!</span>
              </h1>
            )}
            <p className="text-gray pt-4">
              Lkhir Fach? Lkhir fl{" "}
              <span className="font-bold">mosa3ada!</span>
            </p>
            <div className="mt-4 flex space-x-6">
              <button className="text-blue flex">
                <svg
                  width="20"
                  height="20"
                  viewBox="0 0 47 47"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M31.3333 5.875H21.5417V41.125H31.3333M31.3333 5.875V41.125M31.3333 5.875H41.125V41.125H31.3333M9.79167 5.875L17.625 6.85417L14.1979 41.125L5.875 40.1458L9.79167 5.875Z"
                    stroke="#285BBE"
                    stroke-width="3.91667"
                    stroke-linejoin="round"
                  />
                  <path
                    d="M36.2292 17.625V14.6875M26.4375 17.625V14.6875"
                    stroke="#285BBE"
                    stroke-width="3.91667"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
                <span className="ml-2 font-medium">Manage Repos</span>
              </button>
              <button className="text-orange flex">
                <svg
                  width="20"
                  height="20"
                  viewBox="0 0 47 47"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M34.7604 5.875C36.4484 5.875 38.0673 6.54555 39.2609 7.73914C40.4544 8.93273 41.125 10.5516 41.125 12.2396V34.7604C41.125 36.4484 40.4544 38.0673 39.2609 39.2609C38.0673 40.4544 36.4484 41.125 34.7604 41.125H12.2396C10.5516 41.125 8.93273 40.4544 7.73914 39.2609C6.54555 38.0673 5.875 36.4484 5.875 34.7604V12.2396C5.875 10.5516 6.54555 8.93273 7.73914 7.73914C8.93273 6.54555 10.5516 5.875 12.2396 5.875H34.7604ZM38.1875 16.6458H8.8125V34.7604C8.8125 36.6522 10.3478 38.1875 12.2396 38.1875H34.7604C35.6693 38.1875 36.541 37.8264 37.1837 37.1837C37.8264 36.541 38.1875 35.6693 38.1875 34.7604V16.6458ZM15.1771 28.3958C15.8263 28.3958 16.4489 28.6537 16.908 29.1128C17.3671 29.5719 17.625 30.1945 17.625 30.8438C17.625 31.493 17.3671 32.1156 16.908 32.5747C16.4489 33.0338 15.8263 33.2917 15.1771 33.2917C14.5279 33.2917 13.9052 33.0338 13.4461 32.5747C12.9871 32.1156 12.7292 31.493 12.7292 30.8438C12.7292 30.1945 12.9871 29.5719 13.4461 29.1128C13.9052 28.6537 14.5279 28.3958 15.1771 28.3958ZM23.5 28.3958C24.1492 28.3958 24.7719 28.6537 25.2309 29.1128C25.69 29.5719 25.9479 30.1945 25.9479 30.8438C25.9479 31.493 25.69 32.1156 25.2309 32.5747C24.7719 33.0338 24.1492 33.2917 23.5 33.2917C22.8508 33.2917 22.2281 33.0338 21.7691 32.5747C21.31 32.1156 21.0521 31.493 21.0521 30.8438C21.0521 30.1945 21.31 29.5719 21.7691 29.1128C22.2281 28.6537 22.8508 28.3958 23.5 28.3958ZM15.1771 20.5625C15.8263 20.5625 16.4489 20.8204 16.908 21.2795C17.3671 21.7386 17.625 22.3612 17.625 23.0104C17.625 23.6596 17.3671 24.2823 16.908 24.7414C16.4489 25.2004 15.8263 25.4583 15.1771 25.4583C14.5279 25.4583 13.9052 25.2004 13.4461 24.7414C12.9871 24.2823 12.7292 23.6596 12.7292 23.0104C12.7292 22.3612 12.9871 21.7386 13.4461 21.2795C13.9052 20.8204 14.5279 20.5625 15.1771 20.5625ZM23.5 20.5625C24.1492 20.5625 24.7719 20.8204 25.2309 21.2795C25.69 21.7386 25.9479 22.3612 25.9479 23.0104C25.9479 23.6596 25.69 24.2823 25.2309 24.7414C24.7719 25.2004 24.1492 25.4583 23.5 25.4583C22.8508 25.4583 22.2281 25.2004 21.7691 24.7414C21.31 24.2823 21.0521 23.6596 21.0521 23.0104C21.0521 22.3612 21.31 21.7386 21.7691 21.2795C22.2281 20.8204 22.8508 20.5625 23.5 20.5625ZM31.8229 20.5625C32.4721 20.5625 33.0948 20.8204 33.5539 21.2795C34.0129 21.7386 34.2708 22.3612 34.2708 23.0104C34.2708 23.6596 34.0129 24.2823 33.5539 24.7414C33.0948 25.2004 32.4721 25.4583 31.8229 25.4583C31.1737 25.4583 30.5511 25.2004 30.092 24.7414C29.6329 24.2823 29.375 23.6596 29.375 23.0104C29.375 22.3612 29.6329 21.7386 30.092 21.2795C30.5511 20.8204 31.1737 20.5625 31.8229 20.5625ZM34.7604 8.8125H12.2396C11.3307 8.8125 10.459 9.17357 9.81627 9.81627C9.17357 10.459 8.8125 11.3307 8.8125 12.2396V13.7083H38.1875V12.2396C38.1875 11.3307 37.8264 10.459 37.1837 9.81627C36.541 9.17357 35.6693 8.8125 34.7604 8.8125Z"
                    fill="#FF5E43"
                  />
                </svg>
                <span className="ml-2 font-medium">Check Calendar</span>
              </button>
            </div>
          </div>
          <div class="pb-16 pr-5">
            <img
              src="welcome-illustration.svg"
              alt="Welcome"
              className="w-80"
            />
          </div>
        </div>
        {/* Pinned Repos */}
        <div className="mt-6">
          <h2 className="text-2xl font-bold mb-4">Pinned Repos</h2>
          {/* Check if there are any pinned repos */}
          {pinnedRepos.length > 0 ? (
            <div className="flex space-x-5">
              {pinnedRepos.map((repo, index) => (
                <div
                  key={repo.id}
                  className={`relative ${colors[index % colors.length]
                    } p-3 shadow-lg rounded-lg w-[252px] transition-transform transform hover:scale-105 hover:shadow-lg`}
                >
                  {/* Unpin icon positioned in the top right corner */}
                  <button
                    onClick={() => handleUnpinRepo(repo.id)}
                    className="absolute top-2 right-2"
                    aria-label={`Unpin ${repo.name}`}
                  >
                    {/* Unpin icon */}
                    <svg
                      width="30"
                      height="22"
                      viewBox="0 0 38 38"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M33.2041 27.189L30.9653 29.4278L25.3682 23.8308L25.2526 23.9479L24.1332 29.545L21.8928 31.7854L15.1763 25.0673L7.33881 32.9048L5.09998 30.666L12.9375 22.8285L6.21939 16.1104L8.45823 13.8716L14.0569 12.7522L14.1725 12.635L8.57381 7.03633L10.8126 4.79592L33.2041 27.189ZM29.8475 19.3515L31.9691 17.2298L33.0886 18.3493L35.329 16.1104L21.8928 2.67583L19.654 4.91467L20.7734 6.03408L18.6517 8.15575L29.8475 19.3515Z"
                        fill="black"
                      />
                    </svg>
                  </button>

                  <div className="flex">
                    {/* SVG icon on the left */}
                    <svg
                      width="50"
                      height="54"
                      viewBox="0 0 80 64"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                      className="mr-4"
                    >
                      <path
                        d={svgs[index % svgs.length].path}
                        fill={svgs[index % svgs.length].color}
                      />
                    </svg>

                    <div className="flex flex-col">
                      <h3 className="font-bold text-left">{repo.name}</h3>
                      <p className="text-sm text-left">
                        {repo.documentCount} Documents
                      </p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            // Display this message if there are no pinned repositories
            <p className="text-gray">No pinned repositories yet.</p>
          )}
        </div>
        <div>
          <h2 className="text-2xl font-bold mb-4 mt-6">Recently Files</h2>
          {recentFiles.length > 0 ? (
            <div className="flex space-x-4">
              {recentFiles.map((file, index) => {
                const fileExtension = file.filename
                  .split(".")
                  .pop()
                  .toLowerCase();
                const isPreviewable = [
                  "pdf",
                  "doc",
                  "docx",
                  "ppt",
                  "pptx",
                  "png",
                  "jpg",
                  "jpeg",
                  "gif",
                ].includes(fileExtension);

                return (
                  <a
                    key={index}
                    href={isPreviewable ? file.url : `${file.url}?download`} // Open previewable files, download others
                    target={isPreviewable ? "_blank" : "_self"} // Open previewable files in new tab
                    rel="noopener noreferrer"
                    className="bg-white p-4 rounded-lg shadow-lg w-3/5 flex flex-col justify-between cursor-pointer hover:shadow-xl hover:scale-105 transition-transform duration-200"
                  >
                    {/* Center the icon */}
                    <div className="flex justify-center items-center">
                      {getFileIcon(fileExtension)}{" "}
                      {/* Replace this with appropriate icon logic */}
                    </div>
                    {/* File Name */}
                    <h2
                      className="font-medium text-primary pt-2 pb-1 truncate"
                      style={{ maxWidth: "150px" }} // Ensure text doesn't overflow
                      title={file.filename} // Show full name on hover
                    >
                      {file.filename}
                    </h2>

                    {/* Added Date in lighter font with time */}
                    <p className="text-gray text-sm">
                      Added on {new Date(file.added_at).toLocaleString()}{" "}
                      {/* Shows date and time */}
                    </p>
                  </a>
                );
              })}
            </div>
          ) : (
            <p className="text-gray text-lg">No recent files available.</p> // Display message when no files
          )}
        </div>
      </div>
    </div>
  );
};

export default Dashboard;
